{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","robot","className","name","alt","src","id","CardList","robots","map","Search","setSearch","type","placeholder","onChange","e","target","value","App","useState","setRobots","search","useEffect","fetch","then","response","json","data","filteredRobots","filter","console","log","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAaeA,EAVF,SAACC,GACZ,IAAQC,EAAUD,EAAVC,MACR,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAKD,EAAME,OACX,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BJ,EAAMK,UCMlDC,G,MAVE,SAACP,GAChB,OACE,qBAAKE,UAAU,WAAf,SACGF,EAAMQ,OAAOC,KAAI,SAACR,GAAD,OAChB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMK,WCMVI,EAZA,SAACV,GACd,IAAQW,EAAcX,EAAdW,UAER,OACE,uBACEC,KAAK,SACLC,YAAY,aACZC,SAAU,SAACC,GAAD,OAAOJ,EAAUI,EAAEC,OAAOC,WCsB3BC,MA1Bf,WACE,MAA4BC,mBAAS,IAArC,mBAAOX,EAAP,KAAeY,EAAf,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeV,EAAf,KAEAW,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUP,EAAUO,QAC3B,IAGH,IAAMC,EAAiBpB,EAAOqB,QAAO,SAAC5B,GAEpC,OADA6B,QAAQC,IAAI9B,EAAME,MACXF,EAAME,KAAK6B,cAAcC,SAASZ,EAAOW,kBAIlD,OADAF,QAAQC,IAAIH,GAEV,gCACE,cAAC,EAAD,CAAQjB,UAAWA,IAClBU,EACD,cAAC,EAAD,CAAUb,OAAQoB,QCdTM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0b5822a0.chunk.js","sourcesContent":["import React from 'react'\nimport './styles/Card.css'\n\nconst Card = (props) => {\n  const { robot } = props\n  return (\n    <div className='card'>\n      <h3>{robot.name}</h3>\n      <img alt='robot avatar' src={`https://robohash.org/${robot.id}`} />\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\nimport './styles/CardList.css'\n\nconst CardList = (props) => {\n  return (\n    <div className='cardList'>\n      {props.robots.map((robot) => (\n        <Card key={robot.id} robot={robot} />\n      ))}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst Search = (props) => {\n  const { setSearch } = props\n\n  return (\n    <input\n      type='search'\n      placeholder='Robot Name'\n      onChange={(e) => setSearch(e.target.value)}\n    />\n  )\n}\n\nexport default Search\n","import './App.css'\nimport CardList from './components/CardList'\nimport Search from './components/Search'\nimport { useEffect, useState } from 'react'\n\nfunction App() {\n  const [robots, setRobots] = useState([])\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((data) => setRobots(data))\n  }, [])\n\n  // search filters robots\n  const filteredRobots = robots.filter((robot) => {\n    console.log(robot.name)\n    return robot.name.toLowerCase().includes(search.toLowerCase())\n  })\n\n  console.log(filteredRobots)\n  return (\n    <div>\n      <Search setSearch={setSearch} />\n      {search}\n      <CardList robots={filteredRobots} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}